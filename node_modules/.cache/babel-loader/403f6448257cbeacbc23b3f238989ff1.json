{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\SunX-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\SunX-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\SunX-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { SWAP_TILES, RESET_SWAP, SELECT_TILE, UNSELECT_TILE, UPDATE_TILE_STATUS, SELECT_GAME_MODE, gameMode, UPDATE_GAME_STATUS } from \"../constants\";\nvar defaultState = {\n  swap: false,\n  tiles: [],\n  tilesStatus: {},\n  gameMode: gameMode.none,\n  minSwapsMode: {\n    threshold: 10\n  },\n  isPlaying: true\n};\n\nvar gameReducer = function gameReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SELECT_GAME_MODE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        gameMode: action.payload\n      });\n\n    case SWAP_TILES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        swap: true\n      });\n\n    case RESET_SWAP:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        swap: false,\n        tiles: []\n      });\n\n    case SELECT_TILE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tiles: [].concat(_toConsumableArray(state.tiles), [action.payload])\n      });\n\n    case UNSELECT_TILE:\n      var coords = action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tiles: state.tiles.filter(function (tile) {\n          return !tile.every(function (coord, index) {\n            return coord === coords[index];\n          });\n        })\n      });\n\n    case UPDATE_TILE_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        tilesStatus: _objectSpread(_objectSpread({}, state.tilesStatus), {}, _defineProperty({}, action.payload.id, action.payload.status))\n      });\n\n    case UPDATE_GAME_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isPlaying: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default gameReducer;","map":{"version":3,"names":["SWAP_TILES","RESET_SWAP","SELECT_TILE","UNSELECT_TILE","UPDATE_TILE_STATUS","SELECT_GAME_MODE","gameMode","UPDATE_GAME_STATUS","defaultState","swap","tiles","tilesStatus","none","minSwapsMode","threshold","isPlaying","gameReducer","state","action","type","payload","coords","filter","tile","every","coord","index","id","status"],"sources":["C:/Users/fouan/Desktop/NASA/SunX-Website/src/store/reducers/game.reducer.js"],"sourcesContent":["import {\r\n  SWAP_TILES,\r\n  RESET_SWAP,\r\n  SELECT_TILE,\r\n  UNSELECT_TILE,\r\n  UPDATE_TILE_STATUS,\r\n  SELECT_GAME_MODE,\r\n  gameMode,\r\n  UPDATE_GAME_STATUS\r\n} from \"../constants\";\r\n\r\nconst defaultState = {\r\n  swap: false,\r\n  tiles: [],\r\n  tilesStatus: {},\r\n  gameMode: gameMode.none,\r\n  minSwapsMode: {\r\n    threshold: 10\r\n  },\r\n  isPlaying: true\r\n};\r\n\r\nconst gameReducer = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case SELECT_GAME_MODE:\r\n      return { ...state, gameMode: action.payload };\r\n\r\n    case SWAP_TILES:\r\n      return { ...state, swap: true };\r\n\r\n    case RESET_SWAP:\r\n      return { ...state, swap: false, tiles: [] };\r\n\r\n    case SELECT_TILE:\r\n      return { ...state, tiles: [...state.tiles, action.payload] };\r\n\r\n    case UNSELECT_TILE:\r\n      const coords = action.payload;\r\n      return {\r\n        ...state,\r\n        tiles: state.tiles.filter(\r\n          tile => !tile.every((coord, index) => coord === coords[index])\r\n        )\r\n      };\r\n\r\n    case UPDATE_TILE_STATUS:\r\n      return {\r\n        ...state,\r\n        tilesStatus: {\r\n          ...state.tilesStatus,\r\n          [action.payload.id]: action.payload.status\r\n        }\r\n      };\r\n\r\n    case UPDATE_GAME_STATUS:\r\n      return { ...state, isPlaying: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default gameReducer;\r\n"],"mappings":";;;AAAA,SACEA,UADF,EAEEC,UAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,kBALF,EAMEC,gBANF,EAOEC,QAPF,EAQEC,kBARF,QASO,cATP;AAWA,IAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,KADa;EAEnBC,KAAK,EAAE,EAFY;EAGnBC,WAAW,EAAE,EAHM;EAInBL,QAAQ,EAAEA,QAAQ,CAACM,IAJA;EAKnBC,YAAY,EAAE;IACZC,SAAS,EAAE;EADC,CALK;EAQnBC,SAAS,EAAE;AARQ,CAArB;;AAWA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;EAAA,IAAjCC,KAAiC,uEAAzBT,YAAyB;EAAA,IAAXU,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKd,gBAAL;MACE,uCAAYY,KAAZ;QAAmBX,QAAQ,EAAEY,MAAM,CAACE;MAApC;;IAEF,KAAKpB,UAAL;MACE,uCAAYiB,KAAZ;QAAmBR,IAAI,EAAE;MAAzB;;IAEF,KAAKR,UAAL;MACE,uCAAYgB,KAAZ;QAAmBR,IAAI,EAAE,KAAzB;QAAgCC,KAAK,EAAE;MAAvC;;IAEF,KAAKR,WAAL;MACE,uCAAYe,KAAZ;QAAmBP,KAAK,+BAAMO,KAAK,CAACP,KAAZ,IAAmBQ,MAAM,CAACE,OAA1B;MAAxB;;IAEF,KAAKjB,aAAL;MACE,IAAMkB,MAAM,GAAGH,MAAM,CAACE,OAAtB;MACA,uCACKH,KADL;QAEEP,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYY,MAAZ,CACL,UAAAC,IAAI;UAAA,OAAI,CAACA,IAAI,CAACC,KAAL,CAAW,UAACC,KAAD,EAAQC,KAAR;YAAA,OAAkBD,KAAK,KAAKJ,MAAM,CAACK,KAAD,CAAlC;UAAA,CAAX,CAAL;QAAA,CADC;MAFT;;IAOF,KAAKtB,kBAAL;MACE,uCACKa,KADL;QAEEN,WAAW,kCACNM,KAAK,CAACN,WADA,2BAERO,MAAM,CAACE,OAAP,CAAeO,EAFP,EAEYT,MAAM,CAACE,OAAP,CAAeQ,MAF3B;MAFb;;IAQF,KAAKrB,kBAAL;MACE,uCAAYU,KAAZ;QAAmBF,SAAS,EAAEG,MAAM,CAACE;MAArC;;IAEF;MACE,yBAAYH,KAAZ;EAnCJ;AAqCD,CAtCD;;AAwCA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}