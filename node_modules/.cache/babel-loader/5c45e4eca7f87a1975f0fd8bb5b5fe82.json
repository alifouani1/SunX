{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\SunX-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\SunX-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\SunX-Website\\\\src\\\\components\\\\board.component.js\";\n\nimport React, { useMemo, useEffect } from \"react\";\nimport { v4 } from \"uuid\";\nimport { Tile } from \"./tile.component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { SWAP_TILES } from \"../store/constants\";\nvar StyledBoard = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  background-color: white;\\n  box-shadow: 0 2px 16px rgba(0, 0, 0, 0.4);\\n  position: relative;\\n  width: \", \"px;\\n  height: \", \"px;\\n\"])), function (_ref) {\n  var width = _ref.width;\n  return width;\n}, function (_ref2) {\n  var height = _ref2.height;\n  return height;\n});\n\nvar useSwapDispatcher = function useSwapDispatcher() {\n  var selectedTiles = useSelector(function (_ref3) {\n    var game = _ref3.game;\n    return game.tiles;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (selectedTiles.length === 2) {\n      dispatch({\n        type: SWAP_TILES\n      });\n    }\n  }, [selectedTiles, dispatch]);\n};\n\nexport var Board = function Board() {\n  useSwapDispatcher();\n\n  var _useSelector = useSelector(function (_ref4) {\n    var board = _ref4.board;\n    return [board.rows, board.columns];\n  }),\n      _useSelector2 = _slicedToArray(_useSelector, 2),\n      numOfRows = _useSelector2[0],\n      numOfColumns = _useSelector2[1];\n\n  var imageUrl = useSelector(function (_ref5) {\n    var image = _ref5.image;\n    return image.url;\n  });\n\n  var _useSelector3 = useSelector(function (_ref6) {\n    var image = _ref6.image;\n    return [image.width, image.height];\n  }),\n      _useSelector4 = _slicedToArray(_useSelector3, 2),\n      imageWidth = _useSelector4[0],\n      imageHeight = _useSelector4[1];\n\n  var randomPositions = useMemo(function () {\n    var alreadyAssignedPositions = {};\n    var randomPositions = {};\n\n    for (var j = 0; j < numOfRows; j++) {\n      for (var i = 0; i < numOfColumns; i++) {\n        var foundUniquePosition = false;\n\n        while (!foundUniquePosition) {\n          var randomX = Math.floor(Math.random() * numOfColumns);\n          var randomY = Math.floor(Math.random() * numOfRows);\n\n          if (!alreadyAssignedPositions[\"\".concat(randomX).concat(randomY)]) {\n            randomPositions[\"\".concat(i).concat(j)] = [randomX, randomY];\n            foundUniquePosition = true;\n            alreadyAssignedPositions[\"\".concat(randomX).concat(randomY)] = true;\n          }\n        }\n      }\n    }\n\n    return randomPositions;\n  }, [numOfColumns, numOfRows]);\n  var tiles = useMemo(function () {\n    var tiles = [];\n\n    for (var j = 0; j < numOfRows; j++) {\n      var columns = [];\n\n      for (var i = 0; i < numOfColumns; i++) {\n        var _randomPositions = _slicedToArray(randomPositions[\"\".concat(i).concat(j)], 2),\n            randomX = _randomPositions[0],\n            randomY = _randomPositions[1];\n\n        columns.push( /*#__PURE__*/React.createElement(Tile, {\n          key: v4(),\n          imageUrl: imageUrl,\n          x: i,\n          y: j,\n          randomX: randomX,\n          randomY: randomY,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      tiles.push( /*#__PURE__*/React.createElement(\"div\", {\n        key: v4(),\n        className: \"row\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, columns));\n    }\n\n    return tiles;\n  }, [imageUrl, numOfColumns, numOfRows, randomPositions]);\n  return /*#__PURE__*/React.createElement(StyledBoard, {\n    width: imageWidth,\n    height: imageHeight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, tiles);\n};","map":{"version":3,"names":["React","useMemo","useEffect","v4","Tile","useSelector","useDispatch","styled","SWAP_TILES","StyledBoard","div","width","height","useSwapDispatcher","selectedTiles","game","tiles","dispatch","length","type","Board","board","rows","columns","numOfRows","numOfColumns","imageUrl","image","url","imageWidth","imageHeight","randomPositions","alreadyAssignedPositions","j","i","foundUniquePosition","randomX","Math","floor","random","randomY","push"],"sources":["C:/Users/fouan/Desktop/NASA/SunX-Website/src/components/board.component.js"],"sourcesContent":["import React, { useMemo, useEffect } from \"react\";\r\nimport { v4 } from \"uuid\";\r\nimport { Tile } from \"./tile.component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { SWAP_TILES } from \"../store/constants\";\r\n\r\nconst StyledBoard = styled.div`\r\n  background-color: white;\r\n  box-shadow: 0 2px 16px rgba(0, 0, 0, 0.4);\r\n  position: relative;\r\n  width: ${({ width }) => width}px;\r\n  height: ${({ height }) => height}px;\r\n`;\r\n\r\nconst useSwapDispatcher = () => {\r\n  const selectedTiles = useSelector(({ game }) => game.tiles);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (selectedTiles.length === 2) {\r\n      dispatch({ type: SWAP_TILES });\r\n    }\r\n  }, [selectedTiles, dispatch]);\r\n};\r\n\r\nexport const Board = () => {\r\n  useSwapDispatcher();\r\n\r\n  const [numOfRows, numOfColumns] = useSelector(({ board }) => [\r\n    board.rows,\r\n    board.columns\r\n  ]);\r\n  const imageUrl = useSelector(({ image }) => image.url);\r\n  const [imageWidth, imageHeight] = useSelector(({ image }) => [\r\n    image.width,\r\n    image.height\r\n  ]);\r\n\r\n  const randomPositions = useMemo(() => {\r\n    const alreadyAssignedPositions = {};\r\n    const randomPositions = {};\r\n\r\n    for (let j = 0; j < numOfRows; j++) {\r\n      for (let i = 0; i < numOfColumns; i++) {\r\n        let foundUniquePosition = false;\r\n\r\n        while (!foundUniquePosition) {\r\n          const randomX = Math.floor(Math.random() * numOfColumns);\r\n          const randomY = Math.floor(Math.random() * numOfRows);\r\n\r\n          if (!alreadyAssignedPositions[`${randomX}${randomY}`]) {\r\n            randomPositions[`${i}${j}`] = [randomX, randomY];\r\n            foundUniquePosition = true;\r\n            alreadyAssignedPositions[`${randomX}${randomY}`] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return randomPositions;\r\n  }, [numOfColumns, numOfRows]);\r\n\r\n  const tiles = useMemo(() => {\r\n    let tiles = [];\r\n\r\n    for (let j = 0; j < numOfRows; j++) {\r\n      const columns = [];\r\n\r\n      for (let i = 0; i < numOfColumns; i++) {\r\n        const [randomX, randomY] = randomPositions[`${i}${j}`];\r\n        columns.push(\r\n          <Tile\r\n            key={v4()}\r\n            imageUrl={imageUrl}\r\n            x={i}\r\n            y={j}\r\n            randomX={randomX}\r\n            randomY={randomY}\r\n          />\r\n        );\r\n      }\r\n\r\n      tiles.push(\r\n        <div key={v4()} className=\"row\">\r\n          {columns}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return tiles;\r\n  }, [imageUrl, numOfColumns, numOfRows, randomPositions]);\r\n\r\n  return (\r\n    <StyledBoard width={imageWidth} height={imageHeight}>\r\n      {tiles}\r\n    </StyledBoard>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}