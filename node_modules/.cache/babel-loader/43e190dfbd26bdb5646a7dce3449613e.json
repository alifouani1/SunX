{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\react-puzzle-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\react-puzzle-forked\\\\src\\\\screens\\\\mode-select.screen.js\";\n\nimport React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { LayoutScreen } from \"./layout.screen\";\nimport { Button } from \"../components/button.component\";\nimport { DefaultNavContent } from \"../components/default-nav-content.component\";\nimport { gameMode, SELECT_GAME_MODE } from \"../store/constants\";\nimport { useSelectedGameMode } from \"../hooks/selected-game-mode.hook\";\nvar Heading = styled.h1(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  text-align: center;\\n  color: white;\\n\"])));\nvar ButtonsContainer = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  width: 80%;\\n  margin: auto;\\n  padding: 1em;\\n  padding-bottom: 0;\\n  justify-content: center;\\n  border-radius: 7px;\\n  align-items: center;\\n  background-color: rgba(255, 255, 255, 0.6);\\n\"])));\nvar FixWidthButton = styled(Button)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n  min-width: 11em;\\n\"])));\nexport var ModeSelectScreen = function ModeSelectScreen() {\n  var dispatch = useDispatch();\n  useSelectedGameMode();\n  var handleClick = useCallback(function (e) {\n    var selectedGameMode = e.target.getAttribute(\"data-mode\");\n    dispatch({\n      type: SELECT_GAME_MODE,\n      payload: selectedGameMode\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(LayoutScreen, {\n    navbar: /*#__PURE__*/React.createElement(DefaultNavContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 27\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Select Mode\"), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/difficulty-level\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixWidthButton, {\n    \"data-mode\": gameMode.timeLimit,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Time Limit\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/difficulty-level\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FixWidthButton, {\n    \"data-mode\": gameMode.minSwaps,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Minimum Swaps\"))));\n};","map":{"version":3,"names":["React","useCallback","styled","Link","useDispatch","LayoutScreen","Button","DefaultNavContent","gameMode","SELECT_GAME_MODE","useSelectedGameMode","Heading","h1","ButtonsContainer","div","FixWidthButton","ModeSelectScreen","dispatch","handleClick","e","selectedGameMode","target","getAttribute","type","payload","timeLimit","minSwaps"],"sources":["C:/Users/fouan/Desktop/NASA/react-puzzle-forked/src/screens/mode-select.screen.js"],"sourcesContent":["import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { LayoutScreen } from \"./layout.screen\";\r\nimport { Button } from \"../components/button.component\";\r\nimport { DefaultNavContent } from \"../components/default-nav-content.component\";\r\nimport { gameMode, SELECT_GAME_MODE } from \"../store/constants\";\r\nimport { useSelectedGameMode } from \"../hooks/selected-game-mode.hook\";\r\n\r\nconst Heading = styled.h1`\r\n  text-align: center;\r\n  color: white;\r\n`;\r\n\r\nconst ButtonsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 80%;\r\n  margin: auto;\r\n  padding: 1em;\r\n  padding-bottom: 0;\r\n  justify-content: center;\r\n  border-radius: 7px;\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.6);\r\n`;\r\n\r\nconst FixWidthButton = styled(Button)`\r\n  min-width: 11em;\r\n`;\r\n\r\nexport const ModeSelectScreen = () => {\r\n  const dispatch = useDispatch();\r\n  useSelectedGameMode();\r\n\r\n  const handleClick = useCallback(\r\n    e => {\r\n      const selectedGameMode = e.target.getAttribute(\"data-mode\");\r\n      dispatch({ type: SELECT_GAME_MODE, payload: selectedGameMode });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <LayoutScreen navbar={<DefaultNavContent />}>\r\n      <Heading>Select Mode</Heading>\r\n\r\n      <ButtonsContainer>\r\n        <Link to=\"/difficulty-level\">\r\n          <FixWidthButton data-mode={gameMode.timeLimit} onClick={handleClick}>\r\n            Time Limit\r\n          </FixWidthButton>\r\n        </Link>\r\n\r\n        <Link to=\"/difficulty-level\">\r\n          <FixWidthButton data-mode={gameMode.minSwaps} onClick={handleClick}>\r\n            Minimum Swaps\r\n          </FixWidthButton>\r\n        </Link>\r\n      </ButtonsContainer>\r\n    </LayoutScreen>\r\n  );\r\n};\r\n"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,MAAT,QAAuB,gCAAvB;AACA,SAASC,iBAAT,QAAkC,6CAAlC;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,oBAA3C;AACA,SAASC,mBAAT,QAAoC,kCAApC;AAEA,IAAMC,OAAO,GAAGT,MAAM,CAACU,EAAV,+GAAb;AAKA,IAAMC,gBAAgB,GAAGX,MAAM,CAACY,GAAV,uTAAtB;AAaA,IAAMC,cAAc,GAAGb,MAAM,CAACI,MAAD,CAAT,6FAApB;AAIA,OAAO,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;EACpC,IAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACAM,mBAAmB;EAEnB,IAAMQ,WAAW,GAAGjB,WAAW,CAC7B,UAAAkB,CAAC,EAAI;IACH,IAAMC,gBAAgB,GAAGD,CAAC,CAACE,MAAF,CAASC,YAAT,CAAsB,WAAtB,CAAzB;IACAL,QAAQ,CAAC;MAAEM,IAAI,EAAEd,gBAAR;MAA0Be,OAAO,EAAEJ;IAAnC,CAAD,CAAR;EACD,CAJ4B,EAK7B,CAACH,QAAD,CAL6B,CAA/B;EAQA,oBACE,oBAAC,YAAD;IAAc,MAAM,eAAE,oBAAC,iBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAtB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,iBADF,eAGE,oBAAC,gBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,IAAD;IAAM,EAAE,EAAC,mBAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IAAgB,aAAWT,QAAQ,CAACiB,SAApC;IAA+C,OAAO,EAAEP,WAAxD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBADF,CADF,eAOE,oBAAC,IAAD;IAAM,EAAE,EAAC,mBAAT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,cAAD;IAAgB,aAAWV,QAAQ,CAACkB,QAApC;IAA8C,OAAO,EAAER,WAAvD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,mBADF,CAPF,CAHF,CADF;AAmBD,CA/BM"},"metadata":{},"sourceType":"module"}