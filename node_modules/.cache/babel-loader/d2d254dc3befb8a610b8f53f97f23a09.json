{"ast":null,"code":"import _slicedToArray from \"D:\\\\dev\\\\SunX\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\dev\\\\SunX\\\\src\\\\screens\\\\min-swaps.screen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { BoardContainer } from \"../components/board-container.component\";\nimport { Board } from \"../components/board.component\";\nimport { Button } from \"../components/button.component\";\nimport { useTilesPositionStatus } from \"../hooks/tile-position-status.hook\";\nimport { UPDATE_GAME_STATUS } from \"../store/constants\";\n\nvar useSwapsCount = function useSwapsCount() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      swapsDone = _useState2[0],\n      setSwapsDone = _useState2[1];\n\n  var isSwapped = useSelector(function (state) {\n    return state.game.swap;\n  });\n  useEffect(function () {\n    if (isSwapped) {\n      setSwapsDone(function (swap) {\n        return swap + 1;\n      });\n    }\n  }, [isSwapped]);\n  return swapsDone;\n};\n\nvar useThresholdExceeded = function useThresholdExceeded(numOfSwaps) {\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isThresholdExceeded = _useState4[0],\n      setIsThresholdExceeded = _useState4[1];\n\n  var threshold = useSelector(function (state) {\n    return state.game.minSwapsMode.threshold;\n  });\n  useEffect(function () {\n    if (numOfSwaps > threshold) {\n      setIsThresholdExceeded(true);\n    }\n  }, [numOfSwaps, threshold]);\n  return isThresholdExceeded;\n};\n\nexport var MinSwapsScreen = function MinSwapsScreen() {\n  var swapsDone = useSwapsCount();\n  var isThresholdExceeded = useThresholdExceeded(swapsDone);\n  var threshold = useSelector(function (state) {\n    return state.game.minSwapsMode.threshold;\n  });\n  var areTilesAligned = useTilesPositionStatus();\n  var dispatch = useDispatch();\n  useEffect(function () {\n    if (isThresholdExceeded || areTilesAligned) {\n      dispatch({\n        type: UPDATE_GAME_STATUS,\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: UPDATE_GAME_STATUS,\n        payload: true\n      });\n    }\n  }, [isThresholdExceeded, areTilesAligned, dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BoardContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Solve Puzzle in \", threshold, \" Swaps or less\"), /*#__PURE__*/React.createElement(Board, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), areTilesAligned ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"green\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"All tiles are aligned, You won!\\uD83D\\uDE03\\uD83D\\uDC4D\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"New Game\"))) : isThresholdExceeded ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Max Number of Swaps Exceeded, Shame on you loser\\uD83D\\uDC7F\\uD83D\\uDC4E\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"New Game\"))) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Swaps Done: \", swapsDone)));\n};","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","Link","BoardContainer","Board","Button","useTilesPositionStatus","UPDATE_GAME_STATUS","useSwapsCount","swapsDone","setSwapsDone","isSwapped","state","game","swap","useThresholdExceeded","numOfSwaps","isThresholdExceeded","setIsThresholdExceeded","threshold","minSwapsMode","MinSwapsScreen","areTilesAligned","dispatch","type","payload","color"],"sources":["D:/dev/SunX/src/screens/min-swaps.screen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { BoardContainer } from \"../components/board-container.component\";\r\nimport { Board } from \"../components/board.component\";\r\nimport { Button } from \"../components/button.component\";\r\nimport { useTilesPositionStatus } from \"../hooks/tile-position-status.hook\";\r\nimport { UPDATE_GAME_STATUS } from \"../store/constants\";\r\n\r\nconst useSwapsCount = () => {\r\n  const [swapsDone, setSwapsDone] = useState(0);\r\n  const isSwapped = useSelector(state => state.game.swap);\r\n\r\n  useEffect(() => {\r\n    if (isSwapped) {\r\n      setSwapsDone(swap => swap + 1);\r\n    }\r\n  }, [isSwapped]);\r\n\r\n  return swapsDone;\r\n};\r\n\r\nconst useThresholdExceeded = numOfSwaps => {\r\n  const [isThresholdExceeded, setIsThresholdExceeded] = useState(false);\r\n  const threshold = useSelector(state => state.game.minSwapsMode.threshold);\r\n\r\n  useEffect(() => {\r\n    if (numOfSwaps > threshold) {\r\n      setIsThresholdExceeded(true);\r\n    }\r\n  }, [numOfSwaps, threshold]);\r\n\r\n  return isThresholdExceeded;\r\n};\r\n\r\nexport const MinSwapsScreen = () => {\r\n  const swapsDone = useSwapsCount();\r\n  const isThresholdExceeded = useThresholdExceeded(swapsDone);\r\n  const threshold = useSelector(state => state.game.minSwapsMode.threshold);\r\n  const areTilesAligned = useTilesPositionStatus();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isThresholdExceeded || areTilesAligned) {\r\n      dispatch({ type: UPDATE_GAME_STATUS, payload: false });\r\n    } else {\r\n      dispatch({ type: UPDATE_GAME_STATUS, payload: true });\r\n    }\r\n  }, [isThresholdExceeded, areTilesAligned, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <BoardContainer>\r\n        <p>Solve Puzzle in {threshold} Swaps or less</p>\r\n        <Board />\r\n\r\n        {areTilesAligned ? (\r\n          <>\r\n            <h1 style={{ color: \"green\" }}>\r\n              All tiles are aligned, You won!üòÉüëç\r\n            </h1>\r\n            <Link to=\"/\">\r\n              <Button>New Game</Button>\r\n            </Link>\r\n          </>\r\n        ) : isThresholdExceeded ? (\r\n          <>\r\n            <h2>Max Number of Swaps Exceeded, Shame on you loserüëøüëé</h2>\r\n            <Link to=\"/\">\r\n              <Button>New Game</Button>\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          <h2>Swaps Done: {swapsDone}</h2>\r\n        )}\r\n      </BoardContainer>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}