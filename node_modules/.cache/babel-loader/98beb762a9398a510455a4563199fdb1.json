{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\react-puzzle-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\react-puzzle-forked\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\fouan\\\\Desktop\\\\NASA\\\\react-puzzle-forked\\\\src\\\\screens\\\\time-limit.screen.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Board } from \"../components/board.component\";\nimport { BoardContainer } from \"../components/board-container.component\";\nimport { useTilesPositionStatus } from \"../hooks/tile-position-status.hook\";\nimport { useTimer } from \"../hooks/timer.hook\";\nimport { Button } from \"../components/button.component\";\nimport { UPDATE_GAME_STATUS } from \"../store/constants\";\nimport styled from \"styled-components\";\n\nvar formatTime = function formatTime(time) {\n  return \"\".concat((parseInt(time / 60, 10) + \"\").padStart(2, \"0\"), \":\").concat((\"\" + time % 60).padStart(2, \"0\"));\n};\n\nvar ErrorText = styled.h2(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  color: white;\\n  background-color: #f44336;\\n  padding: 0.5em;\\n\"])));\nexport var TimeLimitScreen = function TimeLimitScreen() {\n  var areTilesAligned = useTilesPositionStatus();\n  var dispatch = useDispatch();\n\n  var _useTimer = useTimer(30),\n      _useTimer2 = _slicedToArray(_useTimer, 3),\n      timeLeft = _useTimer2[0],\n      startTimer = _useTimer2[1],\n      pauseTimer = _useTimer2[2]; // seconds\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isGameStarted = _useState2[0],\n      setIsGameStarted = _useState2[1];\n\n  useEffect(function () {\n    if (areTilesAligned || timeLeft === 0 || !isGameStarted) {\n      dispatch({\n        type: UPDATE_GAME_STATUS,\n        payload: false\n      });\n      pauseTimer();\n    } else {\n      dispatch({\n        type: UPDATE_GAME_STATUS,\n        payload: true\n      });\n    }\n  }, [timeLeft, areTilesAligned, dispatch, isGameStarted, pauseTimer]);\n\n  var startGame = function startGame() {\n    startTimer();\n    setIsGameStarted(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BoardContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"white\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Time Limit: \", formatTime(timeLeft)), /*#__PURE__*/React.createElement(Board, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), areTilesAligned ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: \"green\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Woah! You're a Pro\\uD83D\\uDE03\\uD83D\\uDC4D\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, \"New Game\"))) : timeLeft === 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ErrorText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Mission Failed, We'll Get 'Em Next Time\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"New Game\"))) : !isGameStarted && /*#__PURE__*/React.createElement(Button, {\n    onClick: startGame,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, \"Start\")));\n};","map":{"version":3,"names":["React","useState","useEffect","useDispatch","Link","Board","BoardContainer","useTilesPositionStatus","useTimer","Button","UPDATE_GAME_STATUS","styled","formatTime","time","parseInt","padStart","ErrorText","h2","TimeLimitScreen","areTilesAligned","dispatch","timeLeft","startTimer","pauseTimer","isGameStarted","setIsGameStarted","type","payload","startGame","color"],"sources":["C:/Users/fouan/Desktop/NASA/react-puzzle-forked/src/screens/time-limit.screen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Board } from \"../components/board.component\";\r\nimport { BoardContainer } from \"../components/board-container.component\";\r\nimport { useTilesPositionStatus } from \"../hooks/tile-position-status.hook\";\r\nimport { useTimer } from \"../hooks/timer.hook\";\r\nimport { Button } from \"../components/button.component\";\r\nimport { UPDATE_GAME_STATUS } from \"../store/constants\";\r\nimport styled from \"styled-components\";\r\n\r\nconst formatTime = time => {\r\n  return `${(parseInt(time / 60, 10) + \"\").padStart(2, \"0\")}:${(\r\n    \"\" +\r\n    (time % 60)\r\n  ).padStart(2, \"0\")}`;\r\n};\r\n\r\nconst ErrorText = styled.h2`\r\n  color: white;\r\n  background-color: #f44336;\r\n  padding: 0.5em;\r\n`;\r\n\r\nexport const TimeLimitScreen = () => {\r\n  const areTilesAligned = useTilesPositionStatus();\r\n  const dispatch = useDispatch();\r\n  const [timeLeft, startTimer, pauseTimer] = useTimer(30); // seconds\r\n  const [isGameStarted, setIsGameStarted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (areTilesAligned || timeLeft === 0 || !isGameStarted) {\r\n      dispatch({ type: UPDATE_GAME_STATUS, payload: false });\r\n      pauseTimer();\r\n    } else {\r\n      dispatch({ type: UPDATE_GAME_STATUS, payload: true });\r\n    }\r\n  }, [timeLeft, areTilesAligned, dispatch, isGameStarted, pauseTimer]);\r\n\r\n  const startGame = () => {\r\n    startTimer();\r\n    setIsGameStarted(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <BoardContainer>\r\n        <h1 style={{ color: \"white\" }}>Time Limit: {formatTime(timeLeft)}</h1>\r\n\r\n        <Board />\r\n\r\n        <br />\r\n\r\n        {areTilesAligned ? (\r\n          <>\r\n            <h1 style={{ color: \"green\" }}>Woah! You're a ProüòÉüëç</h1>\r\n            <Link to=\"/\">\r\n              <Button>New Game</Button>\r\n            </Link>\r\n          </>\r\n        ) : timeLeft === 0 ? (\r\n          <>\r\n            <ErrorText>Mission Failed, We'll Get 'Em Next Time</ErrorText>\r\n            <Link to=\"/\">\r\n              <Button>New Game</Button>\r\n            </Link>\r\n          </>\r\n        ) : (\r\n          !isGameStarted && <Button onClick={startGame}>Start</Button>\r\n        )}\r\n      </BoardContainer>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}